---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { HeaderNavbar } from "../components/react/headerNavbar";

type Props = Partial<CollectionEntry<"blog">["data"]> & {
  isProjectLayout?: boolean;
  related?: CollectionEntry<"blog">[]
};

const { title, description, pubDate, heroImage, isProjectLayout, related } = Astro.props;
const heroImageSet = (heroImage ? Array.from({ length: 3 }).map((_, i) => {
  const basename = heroImage.replace(/.[0-9]x.webp/, "")
  return `${basename}.${i + 1}x.webp ${i === 0 ? 460 : i === 1 ? 850 : 1500}w`;
}) : []).join(",")
---

<html lang="es">
  <head>
    <BaseHead title={title ?? ""} description={description ?? ""} image={heroImage} type={heroImage ? "article" : "website"} />
  </head>
  <body>
    <HeaderNavbar client:visible />
    <main class="max-w-5xl mx-auto px-6">
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <img src={heroImage} srcset={heroImageSet} alt={title} class="w-full h-auto rounded-xl" />
            )
          }
        </div>
        <div class="prose max-w-3xl mx-auto dark:prose-invert">
          <header class="text-center pt-10 pb-2">
            <div class="text-neutral-500">
              <FormattedDate date={pubDate ?? new Date()} />
            </div>
            <h1 class="mb-2">{title}</h1>
            <p class="mt-2">Por Fernando Ticona</p>
            {isProjectLayout && (
              <div>
                <p class="mt-2">
                  <strong>Cliente: </strong>
                  <span>{(Astro.props as any).client}</span>
                </p>
                <p class="mt-2">
                  <strong>Rol/Area: </strong>
                  <span>{(Astro.props as any).role}</span>
                </p>
              </div>
            )}
          </header>
          <slot />
          <footer class="not-prose">
            {related && (
              <div>
                <h2 class="text-2xl font-bold text-[var(--tw-prose-headings)] mb-4">Artículos relacionados</h2>  
                <ul class="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {
                    related.map((post: any, i: number) => (
                      <li class={``}>
                        <a href={`/blog/${post.id}/`} class="block">
                          <img
                            src={post.data.heroImage.replace(/.[0-9]x.webp/, ".2x.webp")}
                            alt={`Imagen del articulo ${post.data.title} | Blog de fvcoder`}
                            class="object-cover w-full h-auto rounded-xl"
                            loading="lazy"
                          />
                          <h4 class="mt-2 text-2xl font-semibold line-clamp-2">{post.data.title}</h4>
                          <p class="text-neutral-500">
                            <FormattedDate date={post.data.pubDate} />
                          </p>
                        </a>
                      </li>
                    ))
                  }
                </ul>
              </div>
            )}
            <div>
              <a
                href={`${isProjectLayout ? "/project" : "/blog"}?ref=blog-article`}
                class="text-blue-500 hover:underline mt-4 block w-fit"
                >Ver mas {isProjectLayout ? "Projectos" : "artículos"}</a
              >
            </div>
          </footer>
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
